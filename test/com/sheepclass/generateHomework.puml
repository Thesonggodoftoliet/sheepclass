@startuml
        start
        :i = 0;
        while(i<知识点个数?)
            :将题目加入链表;
        endwhile

        :将链表按照序号排序;
        :j=0;
        while(j<题目个数?)
            :检查知识点符合程度并记录;
            :去掉重复的题目;
        endwhile

        :将链表按照重复次数排序;
        :根据不同比例选题;
        stop
'        List<Integer> knowledges = PraseUtils.sToi(sets);
'        List<Homework> homeworkList = new ArrayList<>();
'        List<Temp> temps = new ArrayList<>();
'        for (int i = 0;i<knowledges.size();i++){//循环遍历加入题目
'            homeworkList.addAll(homeworkDao.getHomeworkByknow(knowledges.get(i)));
'        }
'        Collections.sort(homeworkList);
'
'        //去重
'        for (int j = 0;j<homeworkList.size();j++){
'            Temp temp = new Temp();
'            temp.setHomeworkid(homeworkList.get(j).getHomeworkid());
'            temp.setLevel(homeworkList.get(j).getLevel());
'            int last = homeworkList.lastIndexOf(homeworkList.get(j));//最后一次出现位置
'            temp.setNum(last-j+1);//知识点符合程度
'            temp.setHomework(homeworkList.get(j));
'            temps.add(temp);
'            if (j != last)
'                for (int m = j+1;m<=last-j;m++)
'                    homeworkList.remove(j+1);
'        }
'        homeworkList.clear();
'        Collections.sort(temps);
'
'        /*选题*/
'        /*假设十道题，选五道简单题，四道中等题，一道困难题*/
'        int easy = 0;
'        int middle= 0;
'        int hard = 0;
'        for (int i =0;i<temps.size();i++){
'            Temp temp = temps.get(i);
'            if (temp.getLevel()>=10 && hard <1) {
'                hard ++;
'                homeworkList.add(temp.getHomework());
'            }
'            if (temp.getLevel()>=6 && temp.getLevel()<10 && middle<4){
'                middle++;
'                homeworkList.add(temp.getHomework());
'            }
'            if (temp.getLevel()<6 && easy <5){
'                easy++;
'                homeworkList.add(temp.getHomework());
'            }
'
'            if (hard == 1 && easy == 5 && middle ==4)
'                break;
'        }
'
'        return homeworkList;
@enduml